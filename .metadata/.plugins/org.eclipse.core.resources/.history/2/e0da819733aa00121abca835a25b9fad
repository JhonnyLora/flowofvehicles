package org.jhonnytunes.simulation.flowvehicles;

import java.io.IOException;

public class SimpleIntersectPainter implements Runnable {

	private volatile boolean running = true;

	public boolean isRunning() {
		return running;
	}

	public void setRunning(boolean running) {
		this.running = running;
	}

	@Override
	public void run() {
		while (running)
			paint();
	}

	private int horizontalStreetPosition;
	private int verticalStreetPosition;

	private Street horizontal;
	private Street vertical;
	private int horizontalSize;
	private int verticalSize;

	public SimpleIntersectPainter(Street horizontal, Street vertical) {

		horizontalSize = horizontal.getSize();
		verticalSize = vertical.getSize();
		this.horizontal = horizontal;
		this.vertical = vertical;

		verticalStreetPosition = vertical.findOtherStreetIntersect(horizontal);
		horizontalStreetPosition = horizontal
				.findOtherStreetIntersect(vertical);

	}

	public Street getHorizontal() {
		return horizontal;
	}

	public Street getVertical() {
		return vertical;
	}

	public void print(String string) {

		System.out.print(string);
	}

	
	public void paint() {
		 
		
		if (vertical.getVehicles() == null || vertical.getVehicles().isEmpty()
				|| horizontal.getVehicles() == null
				|| horizontal.getVehicles().isEmpty())
			return;
		
		
		print("\n###################################\n");
		for (int i = 0; i < horizontalSize; i++) {
			
			for (int j = 0; j < verticalSize; j++) {

				if (i == horizontalStreetPosition)
					print(checkIfVehicleHorizontal(i));
				else if (j == verticalStreetPosition)
					print(checkIfVehicleVertical(j));
				else
					print("XXXXXXX");

					}
			print("\n");
		}

		print("###################################\n");
		
		System.out.print(out);
		String out = "";
	}

	private String checkIfVehicleVertical(int pos) {

		return checkIfVehicle(pos, vertical);
	}

	private String checkIfVehicleHorizontal(int pos) {

		return checkIfVehicle(pos, horizontal);
	}

	private String checkIfVehicle(int pos, Street street) {

		if (street == null || street.getVehicles() == null
				|| street.getVehicles().isEmpty())
			return "@EMPTY@";

		for (Vehicle vehicle : street.getVehicles())
			if (vehicle.getPos() == pos)
				return vehicle.toString();

		return "[     ]";
	}
}
